{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b++ + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "True"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 == a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "True"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 == a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "True"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a++) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "True"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b-- + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "True"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "True"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c++ > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "True"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 == a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "True"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "True"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "True"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b == c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "False"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 0 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "False"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (false) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "False"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (false || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "False"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif ((a <= 0 || b <= 0) != c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "False"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a - c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "False"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif ((a <= 0 || b <= 0) ^ c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "False"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b >= c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "False"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn -INVALID;\n\t}\n}", "equivalence": "False"}
{"first": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a + b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "second": "public class Triangle\n{\n\tprivate static final int INVALID = 4;\n\tprivate static final int SCALENE = 1;\n\tprivate static final int ISOSCELES = 2;\n\tprivate static final int EQUILATERAL = 3;\n\tpublic static  int classify( int a, int b, int c )\n\t{\n\t\tint trian;\n\t\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\t\treturn INVALID;\n\t\t}\n\t\ttrian = 0;\n\t\tif (a == b) {\n\t\t\ttrian = trian + 1;\n\t\t}\n\t\tif (a == c) {\n\t\t\ttrian = trian + 2;\n\t\t}\n\t\tif (b == c) {\n\t\t\ttrian = trian + 3;\n\t\t}\n\t\tif (trian == 0) {\n\t\t\tif (a % b < c || a + c < b || b + c < a) {\n\t\t\t\treturn INVALID;\n\t\t\t} else {\n\t\t\t\treturn SCALENE;\n\t\t\t}\n\t\t}\n\t\tif (trian > 3) {\n\t\t\treturn EQUILATERAL;\n\t\t}\n\t\tif (trian == 1 && a + b > c) {\n\t\t\treturn ISOSCELES;\n\t\t} else {\n\t\t\tif (trian == 2 && a + c > b) {\n\t\t\t\treturn ISOSCELES;\n\t\t\t} else {\n\t\t\t\tif (trian == 3 && b + c > a) {\n\t\t\t\t\treturn ISOSCELES;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn INVALID;\n\t}\n}", "equivalence": "False"}
